/**
 * generated by Xtext 2.34.0
 */
package org.xtext.example.brml.bRML.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.brml.bRML.BRMLPackage;
import org.xtext.example.brml.bRML.Bus;
import org.xtext.example.brml.bRML.Route;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bus</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.brml.bRML.impl.BusImpl#getBus <em>Bus</em>}</li>
 *   <li>{@link org.xtext.example.brml.bRML.impl.BusImpl#getDriver <em>Driver</em>}</li>
 *   <li>{@link org.xtext.example.brml.bRML.impl.BusImpl#getRoute <em>Route</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BusImpl extends OperationImpl implements Bus
{
  /**
   * The default value of the '{@link #getBus() <em>Bus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBus()
   * @generated
   * @ordered
   */
  protected static final String BUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBus() <em>Bus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBus()
   * @generated
   * @ordered
   */
  protected String bus = BUS_EDEFAULT;

  /**
   * The default value of the '{@link #getDriver() <em>Driver</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDriver()
   * @generated
   * @ordered
   */
  protected static final String DRIVER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDriver() <em>Driver</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDriver()
   * @generated
   * @ordered
   */
  protected String driver = DRIVER_EDEFAULT;

  /**
   * The cached value of the '{@link #getRoute() <em>Route</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoute()
   * @generated
   * @ordered
   */
  protected Route route;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BusImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BRMLPackage.Literals.BUS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBus()
  {
    return bus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBus(String newBus)
  {
    String oldBus = bus;
    bus = newBus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BRMLPackage.BUS__BUS, oldBus, bus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDriver()
  {
    return driver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDriver(String newDriver)
  {
    String oldDriver = driver;
    driver = newDriver;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BRMLPackage.BUS__DRIVER, oldDriver, driver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Route getRoute()
  {
    if (route != null && route.eIsProxy())
    {
      InternalEObject oldRoute = (InternalEObject)route;
      route = (Route)eResolveProxy(oldRoute);
      if (route != oldRoute)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BRMLPackage.BUS__ROUTE, oldRoute, route));
      }
    }
    return route;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Route basicGetRoute()
  {
    return route;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRoute(Route newRoute)
  {
    Route oldRoute = route;
    route = newRoute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BRMLPackage.BUS__ROUTE, oldRoute, route));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BRMLPackage.BUS__BUS:
        return getBus();
      case BRMLPackage.BUS__DRIVER:
        return getDriver();
      case BRMLPackage.BUS__ROUTE:
        if (resolve) return getRoute();
        return basicGetRoute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BRMLPackage.BUS__BUS:
        setBus((String)newValue);
        return;
      case BRMLPackage.BUS__DRIVER:
        setDriver((String)newValue);
        return;
      case BRMLPackage.BUS__ROUTE:
        setRoute((Route)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BRMLPackage.BUS__BUS:
        setBus(BUS_EDEFAULT);
        return;
      case BRMLPackage.BUS__DRIVER:
        setDriver(DRIVER_EDEFAULT);
        return;
      case BRMLPackage.BUS__ROUTE:
        setRoute((Route)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BRMLPackage.BUS__BUS:
        return BUS_EDEFAULT == null ? bus != null : !BUS_EDEFAULT.equals(bus);
      case BRMLPackage.BUS__DRIVER:
        return DRIVER_EDEFAULT == null ? driver != null : !DRIVER_EDEFAULT.equals(driver);
      case BRMLPackage.BUS__ROUTE:
        return route != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (bus: ");
    result.append(bus);
    result.append(", driver: ");
    result.append(driver);
    result.append(')');
    return result.toString();
  }

} //BusImpl
