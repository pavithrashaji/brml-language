/**
 * generated by Xtext 2.34.0
 */
package org.xtext.example.brml.bRML.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.brml.bRML.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.brml.bRML.BRMLPackage
 * @generated
 */
public class BRMLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BRMLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BRMLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BRMLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BRMLPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.OPERATION:
      {
        Operation operation = (Operation)theEObject;
        T result = caseOperation(operation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.STOP:
      {
        Stop stop = (Stop)theEObject;
        T result = caseStop(stop);
        if (result == null) result = caseOperation(stop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.DEL_STOP:
      {
        DelStop delStop = (DelStop)theEObject;
        T result = caseDelStop(delStop);
        if (result == null) result = caseOperation(delStop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.ROUTE:
      {
        Route route = (Route)theEObject;
        T result = caseRoute(route);
        if (result == null) result = caseOperation(route);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.ROUTE_STOP:
      {
        RouteStop routeStop = (RouteStop)theEObject;
        T result = caseRouteStop(routeStop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.BUS:
      {
        Bus bus = (Bus)theEObject;
        T result = caseBus(bus);
        if (result == null) result = caseOperation(bus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.DEL_ROUTE:
      {
        DelRoute delRoute = (DelRoute)theEObject;
        T result = caseDelRoute(delRoute);
        if (result == null) result = caseOperation(delRoute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.DEL_BUS:
      {
        DelBus delBus = (DelBus)theEObject;
        T result = caseDelBus(delBus);
        if (result == null) result = caseOperation(delBus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.LOCATION:
      {
        Location location = (Location)theEObject;
        T result = caseLocation(location);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.ADD_ROUTE_STOP:
      {
        AddRouteStop addRouteStop = (AddRouteStop)theEObject;
        T result = caseAddRouteStop(addRouteStop);
        if (result == null) result = caseOperation(addRouteStop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.DELETE_ROUTE_STOP:
      {
        DeleteRouteStop deleteRouteStop = (DeleteRouteStop)theEObject;
        T result = caseDeleteRouteStop(deleteRouteStop);
        if (result == null) result = caseOperation(deleteRouteStop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.PRINT_ROUTE:
      {
        PrintRoute printRoute = (PrintRoute)theEObject;
        T result = casePrintRoute(printRoute);
        if (result == null) result = caseOperation(printRoute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.PRINT_BUS:
      {
        PrintBus printBus = (PrintBus)theEObject;
        T result = casePrintBus(printBus);
        if (result == null) result = caseOperation(printBus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BRMLPackage.PRINT_STOP:
      {
        PrintStop printStop = (PrintStop)theEObject;
        T result = casePrintStop(printStop);
        if (result == null) result = caseOperation(printStop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperation(Operation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStop(Stop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Del Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Del Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDelStop(DelStop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Route</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Route</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRoute(Route object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Route Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Route Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRouteStop(RouteStop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBus(Bus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Del Route</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Del Route</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDelRoute(DelRoute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Del Bus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Del Bus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDelBus(DelBus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocation(Location object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Add Route Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Add Route Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddRouteStop(AddRouteStop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delete Route Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delete Route Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeleteRouteStop(DeleteRouteStop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Print Route</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Print Route</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrintRoute(PrintRoute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Print Bus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Print Bus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrintBus(PrintBus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Print Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Print Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrintStop(PrintStop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BRMLSwitch
