/*
 * generated by Xtext 2.34.0
 */
grammar InternalBRML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.brml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.brml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.brml.services.BRMLGrammarAccess;

}

@parser::members {

 	private BRMLGrammarAccess grammarAccess;

    public InternalBRMLParser(TokenStream input, BRMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BRMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_0());
			}
			lv_operations_0_0=ruleOperation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"operations",
					lv_operations_0_0,
					"org.xtext.example.brml.BRML.Operation");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getRouteParserRuleCall_0());
		}
		this_Route_0=ruleRoute
		{
			$current = $this_Route_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getBusParserRuleCall_1());
		}
		this_Bus_1=ruleBus
		{
			$current = $this_Bus_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStopParserRuleCall_2());
		}
		this_Stop_2=ruleStop
		{
			$current = $this_Stop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getAddRouteStopParserRuleCall_3());
		}
		this_AddRouteStop_3=ruleAddRouteStop
		{
			$current = $this_AddRouteStop_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDeleteRouteStopParserRuleCall_4());
		}
		this_DeleteRouteStop_4=ruleDeleteRouteStop
		{
			$current = $this_DeleteRouteStop_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDelRouteParserRuleCall_5());
		}
		this_DelRoute_5=ruleDelRoute
		{
			$current = $this_DelRoute_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDelBusParserRuleCall_6());
		}
		this_DelBus_6=ruleDelBus
		{
			$current = $this_DelBus_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDelStopParserRuleCall_7());
		}
		this_DelStop_7=ruleDelStop
		{
			$current = $this_DelStop_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getPrintRouteParserRuleCall_8());
		}
		this_PrintRoute_8=rulePrintRoute
		{
			$current = $this_PrintRoute_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getPrintBusParserRuleCall_9());
		}
		this_PrintBus_9=rulePrintBus
		{
			$current = $this_PrintBus_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getPrintStopParserRuleCall_10());
		}
		this_PrintStop_10=rulePrintStop
		{
			$current = $this_PrintStop_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStop
entryRuleStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStopRule()); }
	iv_ruleStop=ruleStop
	{ $current=$iv_ruleStop.current; }
	EOF;

// Rule Stop
ruleStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD STOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getStopAccess().getADDSTOPKeyword_0());
		}
		(
			(
				lv_stop_1_0=RULE_STRING
				{
					newLeafNode(lv_stop_1_0, grammarAccess.getStopAccess().getStopSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStopRule());
					}
					setWithLastConsumed(
						$current,
						"stop",
						lv_stop_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='AT'
		{
			newLeafNode(otherlv_2, grammarAccess.getStopAccess().getATKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStopAccess().getLocationLocationParserRuleCall_3_0());
				}
				lv_location_3_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStopRule());
					}
					set(
						$current,
						"location",
						lv_location_3_0,
						"org.xtext.example.brml.BRML.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDelStop
entryRuleDelStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelStopRule()); }
	iv_ruleDelStop=ruleDelStop
	{ $current=$iv_ruleDelStop.current; }
	EOF;

// Rule DelStop
ruleDelStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE STOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getDelStopAccess().getDELETESTOPKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelStopRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getDelStopAccess().getStopStopCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRoute
entryRuleRoute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRouteRule()); }
	iv_ruleRoute=ruleRoute
	{ $current=$iv_ruleRoute.current; }
	EOF;

// Rule Route
ruleRoute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD ROUTE'
		{
			newLeafNode(otherlv_0, grammarAccess.getRouteAccess().getADDROUTEKeyword_0());
		}
		(
			(
				lv_route_1_0=RULE_INT
				{
					newLeafNode(lv_route_1_0, grammarAccess.getRouteAccess().getRouteINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRouteRule());
					}
					setWithLastConsumed(
						$current,
						"route",
						lv_route_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRouteAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRouteAccess().getRouteStopsRouteStopParserRuleCall_3_0());
				}
				lv_routeStops_3_0=ruleRouteStop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRouteRule());
					}
					add(
						$current,
						"routeStops",
						lv_routeStops_3_0,
						"org.xtext.example.brml.BRML.RouteStop");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleRouteStop
entryRuleRouteStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRouteStopRule()); }
	iv_ruleRouteStop=ruleRouteStop
	{ $current=$iv_ruleRouteStop.current; }
	EOF;

// Rule RouteStop
ruleRouteStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRouteStopRule());
				}
			}
			otherlv_0=RULE_STRING
			{
				newLeafNode(otherlv_0, grammarAccess.getRouteStopAccess().getRoutestopStopCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleBus
entryRuleBus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusRule()); }
	iv_ruleBus=ruleBus
	{ $current=$iv_ruleBus.current; }
	EOF;

// Rule Bus
ruleBus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD BUS'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusAccess().getADDBUSKeyword_0());
		}
		(
			(
				lv_bus_1_0=RULE_STRING
				{
					newLeafNode(lv_bus_1_0, grammarAccess.getBusAccess().getBusSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusRule());
					}
					setWithLastConsumed(
						$current,
						"bus",
						lv_bus_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='DRIVEN BY'
		{
			newLeafNode(otherlv_2, grammarAccess.getBusAccess().getDRIVENBYKeyword_2());
		}
		(
			(
				lv_driver_3_0=RULE_STRING
				{
					newLeafNode(lv_driver_3_0, grammarAccess.getBusAccess().getDriverSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusRule());
					}
					setWithLastConsumed(
						$current,
						"driver",
						lv_driver_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='ON ROUTE'
		{
			newLeafNode(otherlv_4, grammarAccess.getBusAccess().getONROUTEKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getBusAccess().getRouteRouteCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDelRoute
entryRuleDelRoute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelRouteRule()); }
	iv_ruleDelRoute=ruleDelRoute
	{ $current=$iv_ruleDelRoute.current; }
	EOF;

// Rule DelRoute
ruleDelRoute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE ROUTE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDelRouteAccess().getDELETEROUTEKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelRouteRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDelRouteAccess().getRouteRouteCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDelBus
entryRuleDelBus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelBusRule()); }
	iv_ruleDelBus=ruleDelBus
	{ $current=$iv_ruleDelBus.current; }
	EOF;

// Rule DelBus
ruleDelBus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE BUS'
		{
			newLeafNode(otherlv_0, grammarAccess.getDelBusAccess().getDELETEBUSKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelBusRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDelBusAccess().getBusBusCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelBusRule());
					}
				}
				otherlv_2=RULE_STRING
				{
					newLeafNode(otherlv_2, grammarAccess.getDelBusAccess().getBusBusCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOCATION'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocationAccess().getLOCATIONKeyword_0());
		}
		(
			(
				lv_latitude_1_0=RULE_STRING
				{
					newLeafNode(lv_latitude_1_0, grammarAccess.getLocationAccess().getLatitudeSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationRule());
					}
					setWithLastConsumed(
						$current,
						"latitude",
						lv_latitude_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getLocationAccess().getCommaKeyword_2());
		}
		(
			(
				lv_longitude_3_0=RULE_STRING
				{
					newLeafNode(lv_longitude_3_0, grammarAccess.getLocationAccess().getLongitudeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationRule());
					}
					setWithLastConsumed(
						$current,
						"longitude",
						lv_longitude_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAddRouteStop
entryRuleAddRouteStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRouteStopRule()); }
	iv_ruleAddRouteStop=ruleAddRouteStop
	{ $current=$iv_ruleAddRouteStop.current; }
	EOF;

// Rule AddRouteStop
ruleAddRouteStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD ROUTE STOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddRouteStopAccess().getADDROUTESTOPKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddRouteStopRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getAddRouteStopAccess().getRouteStopStopCrossReference_1_0());
				}
			)
		)
		otherlv_2='TO'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddRouteStopAccess().getTOKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddRouteStopRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getAddRouteStopAccess().getRouteRouteCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeleteRouteStop
entryRuleDeleteRouteStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRouteStopRule()); }
	iv_ruleDeleteRouteStop=ruleDeleteRouteStop
	{ $current=$iv_ruleDeleteRouteStop.current; }
	EOF;

// Rule DeleteRouteStop
ruleDeleteRouteStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE ROUTE STOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteRouteStopAccess().getDELETEROUTESTOPKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteRouteStopRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDeleteRouteStopAccess().getRouteStopStopCrossReference_1_0());
				}
			)
		)
		otherlv_2='FROM'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeleteRouteStopAccess().getFROMKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteRouteStopRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDeleteRouteStopAccess().getRouteRouteCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRulePrintRoute
entryRulePrintRoute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRouteRule()); }
	iv_rulePrintRoute=rulePrintRoute
	{ $current=$iv_rulePrintRoute.current; }
	EOF;

// Rule PrintRoute
rulePrintRoute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PRINT ROUTE'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintRouteAccess().getPRINTROUTEKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintRouteRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPrintRouteAccess().getRouteRouteCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRulePrintBus
entryRulePrintBus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintBusRule()); }
	iv_rulePrintBus=rulePrintBus
	{ $current=$iv_rulePrintBus.current; }
	EOF;

// Rule PrintBus
rulePrintBus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PRINT BUS'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintBusAccess().getPRINTBUSKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintBusRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPrintBusAccess().getBusBusCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRulePrintStop
entryRulePrintStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintStopRule()); }
	iv_rulePrintStop=rulePrintStop
	{ $current=$iv_rulePrintStop.current; }
	EOF;

// Rule PrintStop
rulePrintStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PRINT STOP'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintStopAccess().getPRINTSTOPKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintStopRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPrintStopAccess().getStopStopCrossReference_1_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
