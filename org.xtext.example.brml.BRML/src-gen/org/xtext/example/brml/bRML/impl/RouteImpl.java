/**
 * generated by Xtext 2.34.0
 */
package org.xtext.example.brml.bRML.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.brml.bRML.BRMLPackage;
import org.xtext.example.brml.bRML.Route;
import org.xtext.example.brml.bRML.RouteStop;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Route</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.brml.bRML.impl.RouteImpl#getRoute <em>Route</em>}</li>
 *   <li>{@link org.xtext.example.brml.bRML.impl.RouteImpl#getRouteStops <em>Route Stops</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RouteImpl extends OperationImpl implements Route
{
  /**
   * The default value of the '{@link #getRoute() <em>Route</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoute()
   * @generated
   * @ordered
   */
  protected static final int ROUTE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRoute() <em>Route</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoute()
   * @generated
   * @ordered
   */
  protected int route = ROUTE_EDEFAULT;

  /**
   * The cached value of the '{@link #getRouteStops() <em>Route Stops</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRouteStops()
   * @generated
   * @ordered
   */
  protected EList<RouteStop> routeStops;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RouteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BRMLPackage.Literals.ROUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRoute()
  {
    return route;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRoute(int newRoute)
  {
    int oldRoute = route;
    route = newRoute;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BRMLPackage.ROUTE__ROUTE, oldRoute, route));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RouteStop> getRouteStops()
  {
    if (routeStops == null)
    {
      routeStops = new EObjectContainmentEList<RouteStop>(RouteStop.class, this, BRMLPackage.ROUTE__ROUTE_STOPS);
    }
    return routeStops;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BRMLPackage.ROUTE__ROUTE_STOPS:
        return ((InternalEList<?>)getRouteStops()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BRMLPackage.ROUTE__ROUTE:
        return getRoute();
      case BRMLPackage.ROUTE__ROUTE_STOPS:
        return getRouteStops();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BRMLPackage.ROUTE__ROUTE:
        setRoute((Integer)newValue);
        return;
      case BRMLPackage.ROUTE__ROUTE_STOPS:
        getRouteStops().clear();
        getRouteStops().addAll((Collection<? extends RouteStop>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BRMLPackage.ROUTE__ROUTE:
        setRoute(ROUTE_EDEFAULT);
        return;
      case BRMLPackage.ROUTE__ROUTE_STOPS:
        getRouteStops().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BRMLPackage.ROUTE__ROUTE:
        return route != ROUTE_EDEFAULT;
      case BRMLPackage.ROUTE__ROUTE_STOPS:
        return routeStops != null && !routeStops.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (route: ");
    result.append(route);
    result.append(')');
    return result.toString();
  }

} //RouteImpl
